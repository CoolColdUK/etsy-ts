import { BuyerTaxonomy } from "../api/BuyerTaxonomy";
import { ApiConfig, HttpClient } from "../api/http-client";
import { LedgerEntry } from "../api/LedgerEntry";
import { Other } from "../api/Other";
import { Payment } from "../api/Payment";
import { Review } from "../api/Review";
import { SellerTaxonomy } from "../api/SellerTaxonomy";
import { Shop } from "../api/Shop";
import { ShopListing } from "../api/ShopListing";
import { ShopListingFile } from "../api/ShopListingFile";
import { ShopListingImage } from "../api/ShopListingImage";
import { ShopListingInventory } from "../api/ShopListingInventory";
import { ShopListingOffering } from "../api/ShopListingOffering";
import { ShopListingProduct } from "../api/ShopListingProduct";
import { ShopListingTranslation } from "../api/ShopListingTranslation";
import { ShopListingVariationImage } from "../api/ShopListingVariationImage";
import { ShopListingVideo } from "../api/ShopListingVideo";
import { ShopProductionPartner } from "../api/ShopProductionPartner";
import { ShopReceipt } from "../api/ShopReceipt";
import { ShopReceiptTransactions } from "../api/ShopReceiptTransactions";
import { ShopReturnPolicy } from "../api/ShopReturnPolicy";
import { ShopSection } from "../api/ShopSection";
import { ShopShippingProfile } from "../api/ShopShippingProfile";
import { User } from "../api/User";
import { UserAddress } from "../api/UserAddress";
import { ISecurityDataStorage } from "../types/ISecurityDataStorage";
export declare class Etsy {
    httpClient: HttpClient;
    BuyerTaxonomy: BuyerTaxonomy;
    LedgerEntry: LedgerEntry;
    Other: Other;
    Payment: Payment;
    Review: Review;
    SellerTaxonomy: SellerTaxonomy;
    Shop: Shop;
    ShopListing: ShopListing;
    ShopListingFile: ShopListingFile;
    ShopListingImage: ShopListingImage;
    ShopListingInventory: ShopListingInventory;
    ShopListingOffering: ShopListingOffering;
    ShopListingProduct: ShopListingProduct;
    ShopListingTranslation: ShopListingTranslation;
    ShopListingVariationImage: ShopListingVariationImage;
    ShopListingVideo: ShopListingVideo;
    ShopProductionPartner: ShopProductionPartner;
    ShopReceipt: ShopReceipt;
    ShopReceiptTransactions: ShopReceiptTransactions;
    ShopReturnPolicy: ShopReturnPolicy;
    ShopSection: ShopSection;
    ShopShippingProfile: ShopShippingProfile;
    User: User;
    UserAddress: UserAddress;
    constructor({ apiKey, securityDataStorage, enableTokenRefresh }: {
        apiKey: string;
        securityDataStorage: ISecurityDataStorage;
        enableTokenRefresh?: boolean;
    }, apiConfig?: ApiConfig);
}
